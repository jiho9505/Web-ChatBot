[{"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\index.js":"1","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\serviceWorker.js":"2","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\App.js":"3","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\LandingPage\\LandingPage.js":"4","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"5","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\hoc\\auth.js":"6","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\Footer\\Footer.js":"7","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\NavBar\\NavBar.js":"8","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\NotFound\\NotFound.js":"9","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js":"10","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\PathPage\\PathPage.js":"11","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\PathPage\\mapservice\\mapservice.js":"12","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\ProductPage\\ProductPage.js":"13","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\ProductPage\\Product\\Product.js":"14","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\Counsel\\Counsel.js":"15","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\Counsel\\Message\\Message.js":"16"},{"size":726,"mtime":1611398503874,"results":"17","hashOfConfig":"18"},{"size":5086,"mtime":1608080554707,"results":"19","hashOfConfig":"18"},{"size":1681,"mtime":1611811538437,"results":"20","hashOfConfig":"18"},{"size":272,"mtime":1608112328187,"results":"21","hashOfConfig":"18"},{"size":4724,"mtime":1611398323441,"results":"22","hashOfConfig":"18"},{"size":1495,"mtime":1611398350986,"results":"23","hashOfConfig":"18"},{"size":840,"mtime":1611309021876,"results":"24","hashOfConfig":"18"},{"size":725,"mtime":1611481654241,"results":"25","hashOfConfig":"18"},{"size":468,"mtime":1608080554695,"results":"26","hashOfConfig":"18"},{"size":727,"mtime":1611901269468,"results":"27","hashOfConfig":"18"},{"size":805,"mtime":1611811538437,"results":"28","hashOfConfig":"18"},{"size":1077,"mtime":1611571383891,"results":"29","hashOfConfig":"18"},{"size":367,"mtime":1611811283791,"results":"30","hashOfConfig":"18"},{"size":1409,"mtime":1611811283791,"results":"31","hashOfConfig":"18"},{"size":4673,"mtime":1611901269469,"results":"32","hashOfConfig":"18"},{"size":548,"mtime":1611899328519,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ofunln",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\index.js",[],["74","75"],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\serviceWorker.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\App.js",["76","77","78"],"import React, { Suspense } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../hoc/auth\";\r\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\r\nimport PathPage from \"./views/PathPage/PathPage\"\r\nimport ProductPage from \"./views/ProductPage/ProductPage\"\r\nimport NavBar from \"./views/NavBar/NavBar\";\r\nimport Counsel from \"./views/Counsel/Counsel\"\r\nimport Footer from \"./views/Footer/Footer\"\r\nimport { Spin } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst LoginPage = React.lazy(() => import('./views/LoginPage/LoginPage.js'));\r\nconst NotFound = React.lazy(() => import('./views/NotFound/NotFound'));\r\n\r\n\r\n\r\nfunction App() {\r\n  const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />\r\n\r\n  /*\r\n    <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\r\n    <Route exact path=\"/:notfound\" component={Auth(NotFound, null)} />\r\n\r\n  */\r\n  return (\r\n \r\n    <Suspense fallback={(<div style={{display:'flex', marginTop:'200px', justifyContent:'center', alignItems: 'center'}}>\r\n      <Spin indicator={antIcon} /></div>)}>\r\n      \r\n      <NavBar/>\r\n      \r\n      <br/><br/><br/><br/>\r\n      \r\n      <div style={{ minHeight: 'calc(100vh - 80px)'}}>\r\n        \r\n        <Switch>\r\n          <Route exact path=\"/\" component={LandingPage} />\r\n          <Route exact path=\"/path\" component={PathPage} />\r\n          <Route exact path=\"/product\" component={ProductPage} />\r\n          <Route exact path=\"/counsel\" component={Counsel} />\r\n          \r\n        </Switch>\r\n        \r\n      </div>\r\n      <div className='space'></div>\r\n      \r\n      <Footer />\r\n    </Suspense>\r\n  \r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\LandingPage\\LandingPage.js",["79","80","81"],"import React, { useState, useEffect } from 'react'\r\nimport Axios from 'axios'\r\n\r\nfunction LandingPage(props) {\r\n    \r\n    \r\n    return (\r\n        <div className='landing'>\r\n            ChatBot - Start\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingPage\r\n","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\LoginPage\\LoginPage.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\hoc\\auth.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\Footer\\Footer.js",["82"],"import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div style={{\r\n            height: '80px', display: 'flex',\r\n            flexDirection: 'column', alignItems: 'center',\r\n            justifyContent: 'center', fontSize:'12px' , backgroundColor:'black' , color:'white'\r\n        }}>\r\n               \r\n           <div>\r\n               <span>Copyright 2020 findgooddoctors.com All Rights Reserved.</span> \r\n               &nbsp;\r\n               <span className='up_down'>Since 2020.11.03</span>\r\n            </div>\r\n           <div>\r\n               <span>문의 사항 : findgooddoctors@naver.com</span>\r\n               &nbsp;&nbsp;\r\n               <span>|</span>\r\n               \r\n               &nbsp;&nbsp;\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\NavBar\\NavBar.js",["83","84"],"import React from 'react';\r\nimport RightMenu from './Sections/RightMenu';\r\nimport './Sections/Navbar.css';\r\nimport { Link } from 'react-router-dom';\r\nimport font from './font.PNG';\r\nfunction NavBar() {\r\n\r\n\r\n  return (\r\n    <nav className=\"menu\" >\r\n      <div>\r\n        \r\n        <Link to=\"/\" style={{ display:'flex' , padding : '15px 5px'}}>\r\n        \r\n          <img src='./favicon32.png'/>\r\n          <img src={font} style={{ marginLeft : '5px'}}/>\r\n        \r\n          \r\n        </Link>\r\n        \r\n      </div>\r\n      <div className=\"menu__container\">\r\n        \r\n        <div className=\"menu_rigth\" >\r\n          <RightMenu mode=\"horizontal\" />\r\n        </div>\r\n\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\NotFound\\NotFound.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\PathPage\\PathPage.js",["85","86"],"import React from 'react'\r\nimport Mapservice from './mapservice/mapservice'\r\nimport { Button , Typography} from 'antd';\r\n\r\nconst { Title , Text} = Typography;\r\n\r\nfunction PathPage() {\r\n    return (\r\n        <div className='pageSize'>\r\n\r\n            <h2 className=\"pageStart\">\r\n                오시는 길\r\n            </h2>\r\n            <div className='grayBorder'/>\r\n            \r\n            <div className=\"path__map\">\r\n                <Mapservice/>\r\n            </div>\r\n            \r\n            <div className=\"path__desc\">\r\n                <Button style={{borderRadius:'8px' , color: '#73aace', fontSize : '16px' , cursor : 'default'}}>경기도 남양주시 일패동 725-1</Button>\r\n               \r\n            </div>\r\n           \r\n            \r\n            \r\n                \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PathPage\r\n","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\PathPage\\mapservice\\mapservice.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\ProductPage\\ProductPage.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\ProductPage\\Product\\Product.js",["87","88","89","90","91"],"import React from 'react'\r\nimport { Col, Card, Row } from 'antd';\r\nimport ProductImage from '../ProductImage/sample.jpg';\r\n\r\nfunction Product() {\r\n\r\n    return (\r\n        <div>\r\n            <Row gutter={[16, 16]}>\r\n\r\n                <Col lg={6} md={8} xs={12}>\r\n                    <Card\r\n                        cover={<img src={`${ProductImage}`} />}\r\n                    >\r\n                    </Card>       \r\n                </Col>\r\n                <Col lg={6} md={8} xs={12}>\r\n                    <Card\r\n                        cover={<img src={`${ProductImage}`} />}\r\n                    >\r\n                    </Card>       \r\n                </Col>\r\n                <Col lg={6} md={8} xs={12}>\r\n                    <Card\r\n                        cover={<img src={`${ProductImage}`} />}\r\n                    >\r\n                    </Card>       \r\n                </Col>\r\n                <Col lg={6} md={8} xs={12}>\r\n                    <Card\r\n                        cover={<img src={`${ProductImage}`} />}\r\n                    >\r\n                    </Card>       \r\n                </Col>\r\n                <Col lg={6} md={8} xs={12}>\r\n                    <Card\r\n                        cover={<img src={`${ProductImage}`} />}\r\n                    >\r\n                    </Card>       \r\n                </Col>\r\n\r\n            </Row>\r\n            \r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\Counsel\\Counsel.js",["92"],"import React, { useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport Message from './Message/Message';\r\n\r\nfunction Counsel() {\r\n    \r\n    const [allMessage, setallMessage] = useState([])\r\n    \r\n    //const messagesFromRedux = useSelector(state => state.message.messages)\r\n\r\n    useEffect(() => {\r\n\r\n        eventQuery('welcomeToMyWebsite')\r\n\r\n    }, [])\r\n\r\n\r\n    const textQuery = async (text) => {\r\n\r\n        let conversation = {\r\n            who: '손님',\r\n            content: {\r\n                text: {\r\n                    text: text\r\n                }\r\n            }\r\n        }\r\n\r\n        setallMessage([...allMessage,conversation])\r\n        // console.log('text I sent', conversation)\r\n\r\n        // We need to take care of the message Chatbot sent \r\n        const textQueryVariables = {\r\n            text\r\n        }\r\n        try {\r\n            //I will send request to the textQuery ROUTE \r\n            const response = await Axios.post('/api/dialogflow/textQuery', textQueryVariables)\r\n\r\n            for (let content of response.data.fulfillmentMessages) {\r\n\r\n                conversation = {\r\n                    who: 'AI 상담요원',\r\n                    content: content\r\n                }\r\n\r\n                setallMessage([...allMessage,conversation])\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            conversation = {\r\n                who: 'AI 상담요원',\r\n                content: {\r\n                    text: {\r\n                        text: \"에러가 발생하였습니다. 다시 시도해주세요.\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            setallMessage([...allMessage,conversation])\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const eventQuery = async (event) => {\r\n\r\n        const eventQueryVariables = {\r\n            event\r\n        }\r\n        try {\r\n\r\n            const response = await Axios.post('/api/dialogflow/eventQuery', eventQueryVariables)\r\n            for (let content of response.data.fulfillmentMessages) {\r\n\r\n                let conversation = {\r\n                    who: 'AI 상담요원',\r\n                    content: content\r\n                }\r\n\r\n                setallMessage([...allMessage,conversation])\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            let conversation = {\r\n                who: 'AI 상담요원',\r\n                content: {\r\n                    text: {\r\n                        text: \"에러가 발생하였습니다. 다시 시도해주세요.\"\r\n                    }\r\n                }\r\n            }\r\n            setallMessage([...allMessage,conversation])\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const keyPressHanlder = (e) => {\r\n        if (e.key === \"Enter\") {\r\n\r\n            if (!e.target.value) {\r\n                return alert('최소 1글자 이상 입력해주시기 바랍니다.')\r\n            }\r\n\r\n            textQuery(e.target.value)\r\n            e.target.value = \"\";\r\n        }\r\n    }\r\n\r\n\r\n    const renderOneMessage = (message, i) => {\r\n        console.log('message', message)\r\n\r\n     \r\n        if (message.content && message.content.text && message.content.text.text) {\r\n            return <Message key={i} who={message.who} text={message.content.text.text} />\r\n        }\r\n    }\r\n\r\n    const renderMessage = (returnedMessages) => {\r\n\r\n        if (returnedMessages) {\r\n            return returnedMessages.map((message, i) => {\r\n                return renderOneMessage(message, i);\r\n            })\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='pageSize'>\r\n\r\n            <h2 className=\"pageStart\">\r\n                상담 요청 - AI\r\n            </h2>\r\n            <div className='grayBorder'/>\r\n            <br/>\r\n            <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                <div style={{\r\n                height: 700, width: 700,\r\n                border: '3px solid black', borderRadius: '6px'\r\n                }}>\r\n                    <div style={{ height: 644, width: '100%', overflow: 'auto' }}>\r\n\r\n\r\n                        {renderMessage(allMessage)}\r\n\r\n\r\n                    </div>\r\n                    <input\r\n                        style={{\r\n                            margin: 0, width: '100%', height: 50,\r\n                            borderRadius: '4px', padding: '5px', fontSize: '1rem'\r\n                        }}\r\n                        placeholder=\"Send a message...\"\r\n                        onKeyPress={keyPressHanlder}\r\n                        type=\"text\"\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n            <br/>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Counsel;","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\Counsel\\Message\\Message.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":12},{"ruleId":"97","severity":1,"message":"101","line":13,"column":7,"nodeType":"99","messageId":"100","endLine":13,"endColumn":16},{"ruleId":"97","severity":1,"message":"102","line":14,"column":7,"nodeType":"99","messageId":"100","endLine":14,"endColumn":15},{"ruleId":"97","severity":1,"message":"103","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":25},{"ruleId":"97","severity":1,"message":"104","line":1,"column":27,"nodeType":"99","messageId":"100","endLine":1,"endColumn":36},{"ruleId":"97","severity":1,"message":"105","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":13},{"ruleId":"97","severity":1,"message":"106","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":14},{"ruleId":"107","severity":1,"message":"108","line":15,"column":11,"nodeType":"109","endLine":15,"endColumn":39},{"ruleId":"107","severity":1,"message":"108","line":16,"column":11,"nodeType":"109","endLine":16,"endColumn":58},{"ruleId":"97","severity":1,"message":"110","line":5,"column":9,"nodeType":"99","messageId":"100","endLine":5,"endColumn":14},{"ruleId":"97","severity":1,"message":"111","line":5,"column":17,"nodeType":"99","messageId":"100","endLine":5,"endColumn":21},{"ruleId":"107","severity":1,"message":"108","line":13,"column":32,"nodeType":"109","endLine":13,"endColumn":63},{"ruleId":"107","severity":1,"message":"108","line":19,"column":32,"nodeType":"109","endLine":19,"endColumn":63},{"ruleId":"107","severity":1,"message":"108","line":25,"column":32,"nodeType":"109","endLine":25,"endColumn":63},{"ruleId":"107","severity":1,"message":"108","line":31,"column":32,"nodeType":"109","endLine":31,"endColumn":63},{"ruleId":"107","severity":1,"message":"108","line":37,"column":32,"nodeType":"109","endLine":37,"endColumn":63},{"ruleId":"112","severity":1,"message":"113","line":15,"column":8,"nodeType":"114","endLine":15,"endColumn":10,"suggestions":"115"},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'Auth' is defined but never used.","Identifier","unusedVar","'LoginPage' is assigned a value but never used.","'NotFound' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Axios' is defined but never used.","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Title' is assigned a value but never used.","'Text' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'eventQuery'. Either include it or remove the dependency array.","ArrayExpression",["118"],"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},"Update the dependencies array to be: [eventQuery]",{"range":"121","text":"122"},[369,371],"[eventQuery]"]