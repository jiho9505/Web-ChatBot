[{"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\index.js":"1","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\serviceWorker.js":"2","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\App.js":"3","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\LandingPage\\LandingPage.js":"4","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"5","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\hoc\\auth.js":"6","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\Footer\\Footer.js":"7","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\NavBar\\NavBar.js":"8","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\NotFound\\NotFound.js":"9","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js":"10","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\PathPage\\PathPage.js":"11","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\PathPage\\mapservice\\mapservice.js":"12","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\ProductPage\\ProductPage.js":"13","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\ProductPage\\Product\\Product.js":"14","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\Counsel\\Counsel.js":"15","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\Counsel\\Message\\Message.js":"16","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\utils\\ImageSlider.js":"17","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\MobileNav\\MobileNav.js":"18"},{"size":726,"mtime":1611398503874,"results":"19","hashOfConfig":"20"},{"size":5086,"mtime":1608080554707,"results":"21","hashOfConfig":"20"},{"size":1884,"mtime":1612431080347,"results":"22","hashOfConfig":"20"},{"size":366,"mtime":1612336088054,"results":"23","hashOfConfig":"20"},{"size":4724,"mtime":1611398323441,"results":"24","hashOfConfig":"20"},{"size":1495,"mtime":1611398350986,"results":"25","hashOfConfig":"20"},{"size":840,"mtime":1611309021876,"results":"26","hashOfConfig":"20"},{"size":725,"mtime":1611481654241,"results":"27","hashOfConfig":"20"},{"size":468,"mtime":1608080554695,"results":"28","hashOfConfig":"20"},{"size":616,"mtime":1612338448081,"results":"29","hashOfConfig":"20"},{"size":805,"mtime":1611811538437,"results":"30","hashOfConfig":"20"},{"size":1077,"mtime":1611571383891,"results":"31","hashOfConfig":"20"},{"size":367,"mtime":1611811283791,"results":"32","hashOfConfig":"20"},{"size":1409,"mtime":1611811283791,"results":"33","hashOfConfig":"20"},{"size":4472,"mtime":1612168335978,"results":"34","hashOfConfig":"20"},{"size":560,"mtime":1612062650344,"results":"35","hashOfConfig":"20"},{"size":690,"mtime":1612335247839,"results":"36","hashOfConfig":"20"},{"size":986,"mtime":1612431442055,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1ofunln",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\index.js",[],["81","82"],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\serviceWorker.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\App.js",["83","84","85"],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\LandingPage\\LandingPage.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\LoginPage\\LoginPage.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\hoc\\auth.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\Footer\\Footer.js",["86"],"import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div style={{\r\n            height: '80px', display: 'flex',\r\n            flexDirection: 'column', alignItems: 'center',\r\n            justifyContent: 'center', fontSize:'12px' , backgroundColor:'black' , color:'white'\r\n        }}>\r\n               \r\n           <div>\r\n               <span>Copyright 2020 findgooddoctors.com All Rights Reserved.</span> \r\n               &nbsp;\r\n               <span className='up_down'>Since 2020.11.03</span>\r\n            </div>\r\n           <div>\r\n               <span>문의 사항 : findgooddoctors@naver.com</span>\r\n               &nbsp;&nbsp;\r\n               <span>|</span>\r\n               \r\n               &nbsp;&nbsp;\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\NavBar\\NavBar.js",["87","88"],"import React from 'react';\r\nimport RightMenu from './Sections/RightMenu';\r\nimport './Sections/Navbar.css';\r\nimport { Link } from 'react-router-dom';\r\nimport font from './font.PNG';\r\nfunction NavBar() {\r\n\r\n\r\n  return (\r\n    <nav className=\"menu\" >\r\n      <div>\r\n        \r\n        <Link to=\"/\" style={{ display:'flex' , padding : '15px 5px'}}>\r\n        \r\n          <img src='./favicon32.png'/>\r\n          <img src={font} style={{ marginLeft : '5px'}}/>\r\n        \r\n          \r\n        </Link>\r\n        \r\n      </div>\r\n      <div className=\"menu__container\">\r\n        \r\n        <div className=\"menu_rigth\" >\r\n          <RightMenu mode=\"horizontal\" />\r\n        </div>\r\n\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\NotFound\\NotFound.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\PathPage\\PathPage.js",["89","90"],"import React from 'react'\r\nimport Mapservice from './mapservice/mapservice'\r\nimport { Button , Typography} from 'antd';\r\n\r\nconst { Title , Text} = Typography;\r\n\r\nfunction PathPage() {\r\n    return (\r\n        <div className='pageSize'>\r\n\r\n            <h2 className=\"pageStart\">\r\n                오시는 길\r\n            </h2>\r\n            <div className='grayBorder'/>\r\n            \r\n            <div className=\"path__map\">\r\n                <Mapservice/>\r\n            </div>\r\n            \r\n            <div className=\"path__desc\">\r\n                <Button style={{borderRadius:'8px' , color: '#73aace', fontSize : '16px' , cursor : 'default'}}>경기도 남양주시 일패동 725-1</Button>\r\n               \r\n            </div>\r\n           \r\n            \r\n            \r\n                \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PathPage\r\n","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\PathPage\\mapservice\\mapservice.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\ProductPage\\ProductPage.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\ProductPage\\Product\\Product.js",["91","92","93","94","95"],"import React from 'react'\r\nimport { Col, Card, Row } from 'antd';\r\nimport ProductImage from '../ProductImage/sample.jpg';\r\n\r\nfunction Product() {\r\n\r\n    return (\r\n        <div>\r\n            <Row gutter={[16, 16]}>\r\n\r\n                <Col lg={6} md={8} xs={12}>\r\n                    <Card\r\n                        cover={<img src={`${ProductImage}`} />}\r\n                    >\r\n                    </Card>       \r\n                </Col>\r\n                <Col lg={6} md={8} xs={12}>\r\n                    <Card\r\n                        cover={<img src={`${ProductImage}`} />}\r\n                    >\r\n                    </Card>       \r\n                </Col>\r\n                <Col lg={6} md={8} xs={12}>\r\n                    <Card\r\n                        cover={<img src={`${ProductImage}`} />}\r\n                    >\r\n                    </Card>       \r\n                </Col>\r\n                <Col lg={6} md={8} xs={12}>\r\n                    <Card\r\n                        cover={<img src={`${ProductImage}`} />}\r\n                    >\r\n                    </Card>       \r\n                </Col>\r\n                <Col lg={6} md={8} xs={12}>\r\n                    <Card\r\n                        cover={<img src={`${ProductImage}`} />}\r\n                    >\r\n                    </Card>       \r\n                </Col>\r\n\r\n            </Row>\r\n            \r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\Counsel\\Counsel.js",["96"],"import React, { useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport Message from './Message/Message';\r\n\r\nfunction Counsel() {\r\n    \r\n    const [allMessage, setallMessage] = useState([])\r\n\r\n    useEffect(() => {\r\n\r\n        eventQuery('welcomeToMyWebsite')\r\n\r\n    }, [])\r\n\r\n\r\n    const textQuery = async (text) => {\r\n\r\n        let conversations = {\r\n            who: '손님',\r\n            content: {\r\n                text: {\r\n                    text: text\r\n                }\r\n            }\r\n        }\r\n    \r\n       \r\n    \r\n        const textQueryVariables = {\r\n            text\r\n        }\r\n\r\n        try {\r\n            \r\n            const response = await Axios.post('/api/dialogflow/textQuery', textQueryVariables)\r\n\r\n            for (let content of response.data.fulfillmentMessages) {\r\n\r\n                let conversation = {\r\n                    who: 'AI 상담요원',\r\n                    content: content\r\n                }\r\n            \r\n                setallMessage([...allMessage,conversations,conversation])\r\n            } \r\n\r\n\r\n        } catch (error) {\r\n            let conversation = {\r\n                who: 'AI 상담요원',\r\n                content: {\r\n                    text: {\r\n                        text: \"에러가 발생하였습니다. 다시 시도해주세요.\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            setallMessage([...allMessage,conversations,conversation])\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const eventQuery = async (event) => {\r\n\r\n        const eventQueryVariables = {\r\n            event\r\n        }\r\n        try {\r\n\r\n            const response = await Axios.post('/api/dialogflow/eventQuery', eventQueryVariables)\r\n            for (let content of response.data.fulfillmentMessages) {\r\n                \r\n                let conversation = {\r\n                    who: 'AI 상담요원',\r\n                    content: content\r\n                }\r\n\r\n                setallMessage([...allMessage,conversation])\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            let conversation = {\r\n                who: 'AI 상담요원',\r\n                content: {\r\n                    text: {\r\n                        text: \"에러가 발생하였습니다. 다시 시도해주세요.\"\r\n                    }\r\n                }\r\n            }\r\n            setallMessage([...allMessage,conversation])\r\n        }           \r\n\r\n    }\r\n\r\n\r\n    const keyPressHanlder = (e) => {\r\n        if (e.key === \"Enter\") {\r\n\r\n            if (!e.target.value) {\r\n                return alert('최소 1글자 이상 입력해주시기 바랍니다.')\r\n            }\r\n\r\n            textQuery(e.target.value)\r\n            e.target.value = \"\";\r\n        }\r\n    }\r\n\r\n\r\n    const renderOneMessage = (message, i) => {\r\n        console.log('message', message)\r\n\r\n     \r\n        if (message.content && message.content.text && message.content.text.text) {\r\n            return <Message key={i} who={message.who} text={message.content.text.text} />\r\n        }\r\n    }\r\n\r\n    const renderMessage = (returnedMessages) => {\r\n\r\n        if (returnedMessages) {\r\n            return returnedMessages.map((message, i) => {\r\n                return renderOneMessage(message, i);\r\n            })\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='pageSize'>\r\n\r\n            <h2 className=\"pageStart\">\r\n                견적 및 상담 요청 - AI\r\n            </h2>\r\n            <div className='grayBorder'/>\r\n            <br/>\r\n            <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                <div style={{\r\n                height: 700, width: 700,\r\n                border: '3px solid black', borderRadius: '6px'\r\n                }}>\r\n                    <div style={{ height: 644, width: '100%', overflow: 'auto' }}>\r\n\r\n\r\n                        {renderMessage(allMessage)}\r\n\r\n\r\n                    </div>\r\n                    <input\r\n                        style={{\r\n                            margin: 0, width: '100%', height: 50,\r\n                            borderRadius: '4px', padding: '5px', fontSize: '1rem'\r\n                        }}\r\n                        placeholder=\"입력해주시기 바랍니다...\"\r\n                        onKeyPress={keyPressHanlder}\r\n                        type=\"text\"\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n            <br/>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Counsel;","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\Counsel\\Message\\Message.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\utils\\ImageSlider.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\MobileNav\\MobileNav.js",["97","98","99","100"],"import React from 'react'\r\nimport { withRouter,  Link } from 'react-router-dom';\r\nimport nav1 from './NavImages/nav1.PNG'\r\nimport nav2 from './NavImages/nav2.PNG'\r\nimport nav3 from './NavImages/nav3.PNG'\r\nimport nav4 from './NavImages/nav4.PNG'\r\n\r\nfunction MobileNav() {\r\n    return (\r\n        <div className=\"mobnav__whole\" >\r\n            <div className=\"mobnav__part\">\r\n                <Link to=\"/\"><img src={nav4} className=\"mobnav__img\"/></Link>\r\n            </div>\r\n            <div className=\"mobnav__part\">\r\n                <Link to=\"/path\"><img src={nav1} className=\"mobnav__img\"/></Link>\r\n            </div>\r\n            <div className=\"mobnav__part\">\r\n                <Link to=\"/product\"><img src={nav2} className=\"mobnav__img\"/></Link>\r\n            </div>\r\n            <div className=\"mobnav__part\">\r\n                <Link to=\"/counsel\"><img src={nav3} className=\"mobnav__img\"/></Link>\r\n            </div>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(MobileNav)\r\n",{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":12},{"ruleId":"105","severity":1,"message":"109","line":14,"column":7,"nodeType":"107","messageId":"108","endLine":14,"endColumn":16},{"ruleId":"105","severity":1,"message":"110","line":15,"column":7,"nodeType":"107","messageId":"108","endLine":15,"endColumn":15},{"ruleId":"105","severity":1,"message":"111","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":14},{"ruleId":"112","severity":1,"message":"113","line":15,"column":11,"nodeType":"114","endLine":15,"endColumn":39},{"ruleId":"112","severity":1,"message":"113","line":16,"column":11,"nodeType":"114","endLine":16,"endColumn":58},{"ruleId":"105","severity":1,"message":"115","line":5,"column":9,"nodeType":"107","messageId":"108","endLine":5,"endColumn":14},{"ruleId":"105","severity":1,"message":"116","line":5,"column":17,"nodeType":"107","messageId":"108","endLine":5,"endColumn":21},{"ruleId":"112","severity":1,"message":"113","line":13,"column":32,"nodeType":"114","endLine":13,"endColumn":63},{"ruleId":"112","severity":1,"message":"113","line":19,"column":32,"nodeType":"114","endLine":19,"endColumn":63},{"ruleId":"112","severity":1,"message":"113","line":25,"column":32,"nodeType":"114","endLine":25,"endColumn":63},{"ruleId":"112","severity":1,"message":"113","line":31,"column":32,"nodeType":"114","endLine":31,"endColumn":63},{"ruleId":"112","severity":1,"message":"113","line":37,"column":32,"nodeType":"114","endLine":37,"endColumn":63},{"ruleId":"117","severity":1,"message":"118","line":13,"column":8,"nodeType":"119","endLine":13,"endColumn":10,"suggestions":"120"},{"ruleId":"112","severity":1,"message":"113","line":12,"column":30,"nodeType":"114","endLine":12,"endColumn":71},{"ruleId":"112","severity":1,"message":"113","line":15,"column":34,"nodeType":"114","endLine":15,"endColumn":75},{"ruleId":"112","severity":1,"message":"113","line":18,"column":37,"nodeType":"114","endLine":18,"endColumn":78},{"ruleId":"112","severity":1,"message":"113","line":21,"column":37,"nodeType":"114","endLine":21,"endColumn":78},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'Auth' is defined but never used.","Identifier","unusedVar","'LoginPage' is assigned a value but never used.","'NotFound' is assigned a value but never used.","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Title' is assigned a value but never used.","'Text' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'eventQuery'. Either include it or remove the dependency array.","ArrayExpression",["123"],"no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},"Update the dependencies array to be: [eventQuery]",{"range":"126","text":"127"},[285,287],"[eventQuery]"]