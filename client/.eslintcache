[{"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\index.js":"1","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\serviceWorker.js":"2","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\App.js":"3","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\LandingPage\\LandingPage.js":"4","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\Footer\\Footer.js":"5","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\NavBar\\NavBar.js":"6","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\NotFound\\NotFound.js":"7","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js":"8","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\PathPage\\PathPage.js":"9","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\PathPage\\mapservice\\mapservice.js":"10","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\ProductPage\\ProductPage.js":"11","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\ProductPage\\Product\\Product.js":"12","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\Counsel\\Counsel.js":"13","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\Counsel\\Message\\Message.js":"14","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\utils\\ImageSlider.js":"15","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\MobileNav\\MobileNav.js":"16"},{"size":726,"mtime":1611398503874,"results":"17","hashOfConfig":"18"},{"size":5086,"mtime":1608080554707,"results":"19","hashOfConfig":"18"},{"size":1615,"mtime":1612606759717,"results":"20","hashOfConfig":"18"},{"size":1696,"mtime":1613117127080,"results":"21","hashOfConfig":"18"},{"size":420,"mtime":1613041751796,"results":"22","hashOfConfig":"18"},{"size":725,"mtime":1611481654241,"results":"23","hashOfConfig":"18"},{"size":497,"mtime":1612606810227,"results":"24","hashOfConfig":"18"},{"size":616,"mtime":1612338448081,"results":"25","hashOfConfig":"18"},{"size":805,"mtime":1611811538437,"results":"26","hashOfConfig":"18"},{"size":1077,"mtime":1611571383891,"results":"27","hashOfConfig":"18"},{"size":536,"mtime":1612952331844,"results":"28","hashOfConfig":"18"},{"size":3864,"mtime":1613109440556,"results":"29","hashOfConfig":"18"},{"size":5262,"mtime":1612673980736,"results":"30","hashOfConfig":"18"},{"size":1155,"mtime":1612515339908,"results":"31","hashOfConfig":"18"},{"size":1131,"mtime":1613117127079,"results":"32","hashOfConfig":"18"},{"size":986,"mtime":1612431442055,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ofunln",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\index.js",[],["72","73"],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\serviceWorker.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\App.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\LandingPage\\LandingPage.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\Footer\\Footer.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\NavBar\\NavBar.js",["74","75"],"import React from 'react';\r\nimport RightMenu from './Sections/RightMenu';\r\nimport './Sections/Navbar.css';\r\nimport { Link } from 'react-router-dom';\r\nimport font from './font.PNG';\r\nfunction NavBar() {\r\n\r\n\r\n  return (\r\n    <nav className=\"menu\" >\r\n      <div>\r\n        \r\n        <Link to=\"/\" style={{ display:'flex' , padding : '15px 5px'}}>\r\n        \r\n          <img src='./favicon32.png'/>\r\n          <img src={font} style={{ marginLeft : '5px'}}/>\r\n        \r\n          \r\n        </Link>\r\n        \r\n      </div>\r\n      <div className=\"menu__container\">\r\n        \r\n        <div className=\"menu_rigth\" >\r\n          <RightMenu mode=\"horizontal\" />\r\n        </div>\r\n\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\NotFound\\NotFound.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\PathPage\\PathPage.js",["76","77"],"import React from 'react'\r\nimport Mapservice from './mapservice/mapservice'\r\nimport { Button , Typography} from 'antd';\r\n\r\nconst { Title , Text} = Typography;\r\n\r\nfunction PathPage() {\r\n    return (\r\n        <div className='pageSize'>\r\n\r\n            <h2 className=\"pageStart\">\r\n                오시는 길\r\n            </h2>\r\n            <div className='grayBorder'/>\r\n            \r\n            <div className=\"path__map\">\r\n                <Mapservice/>\r\n            </div>\r\n            \r\n            <div className=\"path__desc\">\r\n                <Button style={{borderRadius:'8px' , color: '#73aace', fontSize : '16px' , cursor : 'default'}}>경기도 남양주시 일패동 725-1</Button>\r\n               \r\n            </div>\r\n           \r\n            \r\n            \r\n                \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PathPage\r\n","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\PathPage\\mapservice\\mapservice.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\ProductPage\\ProductPage.js",["78"],"import React from 'react'\r\nimport Product from './Product/Product';\r\nimport { Typography } from \"antd\";\r\n\r\nconst { Title } = Typography\r\n\r\nfunction ProductPage() {\r\n\r\n    return (\r\n    <div className='pageSize'>\r\n\r\n        <h2 className=\"pageStart\">\r\n            제품 샘플\r\n        </h2>\r\n        <div className='grayBorder'/>\r\n        <p style={{fontSize : '1.0rem'}}>이외에도 더 다양한 제품들이 가능합니다!</p>\r\n        <br/>\r\n        <Product />\r\n        \r\n \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ProductPage\r\n","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\ProductPage\\Product\\Product.js",["79","80","81","82","83","84","85","86","87","88","89","90","91"],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\Counsel\\Counsel.js",["92"],"import React, { useState, useEffect , useRef} from 'react';\r\nimport Axios from 'axios';\r\nimport Message from './Message/Message';\r\n\r\nfunction Counsel() {\r\n    \r\n    const messagesEnd = useRef(null)\r\n    const [allMessage, setallMessage] = useState([])\r\n\r\n    useEffect(() => {\r\n        eventQuery('welcomeToMyWebsite')\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        messagesEnd.current.scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\r\n    }, [allMessage])\r\n\r\n \r\n\r\n\r\n\r\n    const textQuery = async (text) => {\r\n\r\n        let conversations = {\r\n            who: '손님',\r\n            content: {\r\n                text: {\r\n                    text: text\r\n                }\r\n            }\r\n        }\r\n    \r\n       \r\n    \r\n        const textQueryVariables = {\r\n            text\r\n        }\r\n\r\n        try {\r\n            \r\n            const response = await Axios.post('/api/dialogflow/textQuery', textQueryVariables)\r\n\r\n            for (let content of response.data.fulfillmentMessages) {\r\n\r\n                let conversation = {\r\n                    who: 'AI 상담요원',\r\n                    content: content\r\n                }\r\n               \r\n                setallMessage([...allMessage,conversations,conversation])\r\n            } \r\n\r\n\r\n        } catch (error) {\r\n            let conversation = {\r\n                who: 'AI 상담요원',\r\n                content: {\r\n                    text: {\r\n                        text: \"에러가 발생하였습니다. 다시 시도해주세요.\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            setallMessage([...allMessage,conversations,conversation])\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const eventQuery = async (event) => {\r\n\r\n        const eventQueryVariables = {\r\n            event\r\n        }\r\n        try {\r\n\r\n            const response = await Axios.post('/api/dialogflow/eventQuery', eventQueryVariables)\r\n            \r\n            for (let content of response.data.fulfillmentMessages) {\r\n                let content1 = {\r\n                    text : {\r\n                        text : content.payload.fields.conv1.stringValue\r\n                    }\r\n                } \r\n                \r\n                let content2 = {\r\n                    text : {\r\n                        text : content.payload.fields.conv2.stringValue\r\n                    }\r\n                } \r\n\r\n                let content3 = {\r\n                    text : {\r\n                        text : content.payload.fields.conv3.stringValue\r\n                    }\r\n                }\r\n\r\n                let conversation = {\r\n                    who: 'AI 상담요원',\r\n                    content: content1\r\n                }\r\n\r\n                let conversation1 = {\r\n                    who: 'AI 상담요원',\r\n                    content: content2\r\n                }\r\n\r\n                let conversation2 = {\r\n                    who: 'AI 상담요원',\r\n                    content: content3\r\n                }\r\n              \r\n            \r\n                setallMessage([...allMessage,conversation,conversation1,conversation2])\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            let conversation = {\r\n                who: 'AI 상담요원',\r\n                content: {\r\n                    text: {\r\n                        text: \"에러가 발생하였습니다. 다시 시도해주세요.\"\r\n                    }\r\n                }\r\n            }\r\n            setallMessage([...allMessage,conversation])\r\n        }           \r\n\r\n    }\r\n\r\n\r\n    const keyPressHanlder = (e) => {\r\n        if (e.key === \"Enter\") {\r\n\r\n            if (!e.target.value) {\r\n                return alert('최소 1글자 이상 입력해주시기 바랍니다.')\r\n            }\r\n\r\n            textQuery(e.target.value)\r\n            e.target.value = \"\"\r\n        }\r\n    }\r\n\r\n\r\n    const renderOneMessage = (message, i) => {\r\n       \r\n        if (message.content && message.content.text && message.content.text.text) {\r\n            return <Message key={i} who={message.who} text={message.content.text.text} />\r\n        }\r\n    }\r\n\r\n    const renderMessage = (returnedMessages) => {\r\n\r\n        if (returnedMessages) {\r\n            return returnedMessages.map((message, i) => {\r\n                return renderOneMessage(message, i);\r\n            })\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='pageSize'>\r\n\r\n            <h2 className=\"pageStart\">\r\n                견적 및 상담 요청 - AI\r\n            </h2>\r\n            <div className='grayBorder'/>\r\n            <br/>\r\n            <div className=\"counsel__whole\">\r\n                <div className=\"counsel__wholechat\">\r\n                    <div className=\"counsel__chat\">\r\n\r\n                        {renderMessage(allMessage)}\r\n                        <div ref={messagesEnd}></div>\r\n\r\n                    </div>\r\n                    <input\r\n                        className=\"counsel__input\"\r\n                        placeholder=\"입력해주시기 바랍니다...\"\r\n                        onKeyPress={keyPressHanlder}\r\n                        type=\"text\"\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n            <br/>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Counsel;","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\Counsel\\Message\\Message.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\utils\\ImageSlider.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\MobileNav\\MobileNav.js",["93","94","95","96"],"import React from 'react'\r\nimport { withRouter,  Link } from 'react-router-dom';\r\nimport nav1 from './NavImages/nav1.PNG'\r\nimport nav2 from './NavImages/nav2.PNG'\r\nimport nav3 from './NavImages/nav3.PNG'\r\nimport nav4 from './NavImages/nav4.PNG'\r\n\r\nfunction MobileNav() {\r\n    return (\r\n        <div className=\"mobnav__whole\" >\r\n            <div className=\"mobnav__part\">\r\n                <Link to=\"/\"><img src={nav4} className=\"mobnav__img\"/></Link>\r\n            </div>\r\n            <div className=\"mobnav__part\">\r\n                <Link to=\"/path\"><img src={nav1} className=\"mobnav__img\"/></Link>\r\n            </div>\r\n            <div className=\"mobnav__part\">\r\n                <Link to=\"/product\"><img src={nav2} className=\"mobnav__img\"/></Link>\r\n            </div>\r\n            <div className=\"mobnav__part\">\r\n                <Link to=\"/counsel\"><img src={nav3} className=\"mobnav__img\"/></Link>\r\n            </div>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(MobileNav)\r\n",{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":15,"column":11,"nodeType":"103","endLine":15,"endColumn":39},{"ruleId":"101","severity":1,"message":"102","line":16,"column":11,"nodeType":"103","endLine":16,"endColumn":58},{"ruleId":"104","severity":1,"message":"105","line":5,"column":9,"nodeType":"106","messageId":"107","endLine":5,"endColumn":14},{"ruleId":"104","severity":1,"message":"108","line":5,"column":17,"nodeType":"106","messageId":"107","endLine":5,"endColumn":21},{"ruleId":"104","severity":1,"message":"105","line":5,"column":9,"nodeType":"106","messageId":"107","endLine":5,"endColumn":14},{"ruleId":"101","severity":1,"message":"102","line":26,"column":32,"nodeType":"103","endLine":26,"endColumn":49},{"ruleId":"101","severity":1,"message":"102","line":34,"column":32,"nodeType":"103","endLine":34,"endColumn":49},{"ruleId":"101","severity":1,"message":"102","line":42,"column":32,"nodeType":"103","endLine":42,"endColumn":49},{"ruleId":"101","severity":1,"message":"102","line":49,"column":32,"nodeType":"103","endLine":49,"endColumn":49},{"ruleId":"101","severity":1,"message":"102","line":56,"column":32,"nodeType":"103","endLine":56,"endColumn":48},{"ruleId":"101","severity":1,"message":"102","line":63,"column":32,"nodeType":"103","endLine":63,"endColumn":48},{"ruleId":"101","severity":1,"message":"102","line":70,"column":32,"nodeType":"103","endLine":70,"endColumn":48},{"ruleId":"101","severity":1,"message":"102","line":77,"column":32,"nodeType":"103","endLine":77,"endColumn":48},{"ruleId":"101","severity":1,"message":"102","line":84,"column":32,"nodeType":"103","endLine":84,"endColumn":48},{"ruleId":"101","severity":1,"message":"102","line":91,"column":32,"nodeType":"103","endLine":91,"endColumn":47},{"ruleId":"101","severity":1,"message":"102","line":98,"column":32,"nodeType":"103","endLine":98,"endColumn":48},{"ruleId":"101","severity":1,"message":"102","line":105,"column":32,"nodeType":"103","endLine":105,"endColumn":48},{"ruleId":"101","severity":1,"message":"102","line":112,"column":32,"nodeType":"103","endLine":112,"endColumn":48},{"ruleId":"109","severity":1,"message":"110","line":12,"column":8,"nodeType":"111","endLine":12,"endColumn":10,"suggestions":"112"},{"ruleId":"101","severity":1,"message":"102","line":12,"column":30,"nodeType":"103","endLine":12,"endColumn":71},{"ruleId":"101","severity":1,"message":"102","line":15,"column":34,"nodeType":"103","endLine":15,"endColumn":75},{"ruleId":"101","severity":1,"message":"102","line":18,"column":37,"nodeType":"103","endLine":18,"endColumn":78},{"ruleId":"101","severity":1,"message":"102","line":21,"column":37,"nodeType":"103","endLine":21,"endColumn":78},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Title' is assigned a value but never used.","Identifier","unusedVar","'Text' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'eventQuery'. Either include it or remove the dependency array.","ArrayExpression",["115"],"no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},"Update the dependencies array to be: [eventQuery]",{"range":"118","text":"119"},[327,329],"[eventQuery]"]