[{"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\index.js":"1","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\serviceWorker.js":"2","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\App.js":"3","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\LandingPage\\LandingPage.js":"4","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\Footer\\Footer.js":"5","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\NavBar\\NavBar.js":"6","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\NotFound\\NotFound.js":"7","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js":"8","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\PathPage\\PathPage.js":"9","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\PathPage\\mapservice\\mapservice.js":"10","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\ProductPage\\ProductPage.js":"11","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\ProductPage\\Product\\Product.js":"12","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\Counsel\\Counsel.js":"13","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\Counsel\\Message\\Message.js":"14","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\utils\\ImageSlider.js":"15","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\MobileNav\\MobileNav.js":"16"},{"size":726,"mtime":1611398503874,"results":"17","hashOfConfig":"18"},{"size":5086,"mtime":1608080554707,"results":"19","hashOfConfig":"18"},{"size":1615,"mtime":1612606759717,"results":"20","hashOfConfig":"18"},{"size":1673,"mtime":1613266586976,"results":"21","hashOfConfig":"18"},{"size":420,"mtime":1613041751796,"results":"22","hashOfConfig":"18"},{"size":809,"mtime":1613269283917,"results":"23","hashOfConfig":"18"},{"size":497,"mtime":1612606810227,"results":"24","hashOfConfig":"18"},{"size":742,"mtime":1613270355734,"results":"25","hashOfConfig":"18"},{"size":805,"mtime":1611811538437,"results":"26","hashOfConfig":"18"},{"size":1077,"mtime":1611571383891,"results":"27","hashOfConfig":"18"},{"size":536,"mtime":1612952331844,"results":"28","hashOfConfig":"18"},{"size":3864,"mtime":1613109440556,"results":"29","hashOfConfig":"18"},{"size":5239,"mtime":1613268564342,"results":"30","hashOfConfig":"18"},{"size":1155,"mtime":1612515339908,"results":"31","hashOfConfig":"18"},{"size":1007,"mtime":1613118838088,"results":"32","hashOfConfig":"18"},{"size":1141,"mtime":1613269283915,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ofunln",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\index.js",[],["71","72"],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\serviceWorker.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\App.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\LandingPage\\LandingPage.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\Footer\\Footer.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\NavBar\\NavBar.js",["73","74"],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\NotFound\\NotFound.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\PathPage\\PathPage.js",["75","76"],"import React from 'react'\r\nimport Mapservice from './mapservice/mapservice'\r\nimport { Button , Typography} from 'antd';\r\n\r\nconst { Title , Text} = Typography;\r\n\r\nfunction PathPage() {\r\n    return (\r\n        <div className='pageSize'>\r\n\r\n            <h2 className=\"pageStart\">\r\n                오시는 길\r\n            </h2>\r\n            <div className='grayBorder'/>\r\n            \r\n            <div className=\"path__map\">\r\n                <Mapservice/>\r\n            </div>\r\n            \r\n            <div className=\"path__desc\">\r\n                <Button style={{borderRadius:'8px' , color: '#73aace', fontSize : '16px' , cursor : 'default'}}>경기도 남양주시 일패동 725-1</Button>\r\n               \r\n            </div>\r\n           \r\n            \r\n            \r\n                \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PathPage\r\n","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\PathPage\\mapservice\\mapservice.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\ProductPage\\ProductPage.js",["77"],"import React from 'react'\r\nimport Product from './Product/Product';\r\nimport { Typography } from \"antd\";\r\n\r\nconst { Title } = Typography\r\n\r\nfunction ProductPage() {\r\n\r\n    return (\r\n    <div className='pageSize'>\r\n\r\n        <h2 className=\"pageStart\">\r\n            제품 샘플\r\n        </h2>\r\n        <div className='grayBorder'/>\r\n        <p style={{fontSize : '1.0rem'}}>이외에도 더 다양한 제품들이 가능합니다!</p>\r\n        <br/>\r\n        <Product />\r\n        \r\n \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ProductPage\r\n","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\ProductPage\\Product\\Product.js",["78","79","80","81","82","83","84","85","86","87","88","89","90"],"import React from 'react'\r\nimport { Col, Card, Row } from 'antd';\r\nimport S1 from '../ProductImage/S1.jpg';\r\nimport S2 from '../ProductImage/S2.jpg';\r\nimport S3 from '../ProductImage/S3.jpg';\r\nimport S4 from '../ProductImage/S4.jpg';\r\nimport S5 from '../ProductImage/S5.jpg';\r\nimport S6 from '../ProductImage/S6.jpg';\r\nimport S7 from '../ProductImage/S7.jpg';\r\nimport S8 from '../ProductImage/S8.jpg';\r\nimport S9 from '../ProductImage/S9.jpg';\r\nimport S10 from '../ProductImage/S10.jpg';\r\nimport S11 from '../ProductImage/S11.jpg';\r\nimport S12 from '../ProductImage/S12.jpg';\r\nimport S13 from '../ProductImage/S13.jpg';\r\n\r\n\r\nfunction Product() {\r\n\r\n    return (\r\n        <div>\r\n            <Row gutter={[16, 16]}>\r\n                {S13 && \r\n                <Col lg={6} md={8} xs={12}>\r\n                    <Card\r\n                        cover={<img src={S13} />}\r\n                    >\r\n                    </Card>       \r\n                </Col>\r\n                }\r\n                {S12 && \r\n                <Col lg={6} md={8} xs={12}>\r\n                    <Card\r\n                        cover={<img src={S12} />}\r\n                    >\r\n                    </Card>       \r\n                </Col>\r\n                }\r\n                {S11 &&\r\n                <Col lg={6} md={8} xs={12}>\r\n                    <Card\r\n                        cover={<img src={S11} />}\r\n                    >\r\n                    </Card>       \r\n                </Col> }\r\n                {S10 &&\r\n                <Col lg={6} md={8} xs={12}>\r\n                    <Card\r\n                        cover={<img src={S10} />}\r\n                    >\r\n                    </Card>       \r\n                </Col> }\r\n                {S9 && \r\n                <Col lg={6} md={8} xs={12}>\r\n                    <Card\r\n                        cover={<img src={S9} />}\r\n                    >\r\n                    </Card>       \r\n                </Col> }\r\n                {S8 && \r\n                <Col lg={6} md={8} xs={12}>\r\n                    <Card\r\n                        cover={<img src={S8} />}\r\n                    >\r\n                    </Card>       \r\n                </Col> }\r\n                {S7 && \r\n                <Col lg={6} md={8} xs={12}>\r\n                    <Card\r\n                        cover={<img src={S7} />}\r\n                    >\r\n                    </Card>       \r\n                </Col> }\r\n                {S6 && \r\n                <Col lg={6} md={8} xs={12}>\r\n                    <Card\r\n                        cover={<img src={S6} />}\r\n                    >\r\n                    </Card>       \r\n                </Col> }\r\n                {S5 && \r\n                <Col lg={6} md={8} xs={12}>\r\n                    <Card\r\n                        cover={<img src={S5} />}\r\n                    >\r\n                    </Card>       \r\n                </Col> }\r\n                {S4 && \r\n                <Col lg={6} md={8} xs={12}>\r\n                    <Card\r\n                        cover={<img src={S4}/>}\r\n                    >\r\n                    </Card>       \r\n                </Col> }\r\n                {S3 && \r\n                <Col lg={6} md={8} xs={12}>\r\n                    <Card\r\n                        cover={<img src={S3} />}\r\n                    >\r\n                    </Card>       \r\n                </Col> }\r\n                {S2 && \r\n                <Col lg={6} md={8} xs={12}>\r\n                    <Card\r\n                        cover={<img src={S2} />}\r\n                    >\r\n                    </Card>       \r\n                </Col> }\r\n                {S1 && \r\n                <Col lg={6} md={8} xs={12}>\r\n                    <Card\r\n                        cover={<img src={S1} />}\r\n                    >\r\n                    </Card>       \r\n                </Col> }\r\n\r\n\r\n            </Row>\r\n            \r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\Counsel\\Counsel.js",["91"],"import React, { useState, useEffect , useRef} from 'react';\r\nimport Axios from 'axios';\r\nimport Message from './Message/Message';\r\n\r\nfunction Counsel() {\r\n    \r\n    const messagesEnd = useRef(null)\r\n    const [allMessage, setallMessage] = useState([])\r\n\r\n    useEffect(() => {\r\n        eventQuery('welcomeToMyWebsite')\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        messagesEnd.current.scrollTo({\r\n            top: 10000,\r\n            behavior: 'smooth'\r\n          });\r\n\r\n    }, [allMessage])\r\n\r\n \r\n\r\n\r\n\r\n    const textQuery = async (text) => {\r\n\r\n        let conversations = {\r\n            who: '손님',\r\n            content: {\r\n                text: {\r\n                    text: text\r\n                }\r\n            }\r\n        }\r\n    \r\n       \r\n    \r\n        const textQueryVariables = {\r\n            text\r\n        }\r\n\r\n        try {\r\n            \r\n            const response = await Axios.post('/api/dialogflow/textQuery', textQueryVariables)\r\n\r\n            for (let content of response.data.fulfillmentMessages) {\r\n\r\n                let conversation = {\r\n                    who: 'AI 상담요원',\r\n                    content: content\r\n                }\r\n               \r\n                setallMessage([...allMessage,conversations,conversation])\r\n            } \r\n\r\n\r\n        } catch (error) {\r\n            let conversation = {\r\n                who: 'AI 상담요원',\r\n                content: {\r\n                    text: {\r\n                        text: \"에러가 발생하였습니다. 다시 시도해주세요.\"\r\n                    }\r\n                }\r\n            }\r\n\r\n            setallMessage([...allMessage,conversations,conversation])\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const eventQuery = async (event) => {\r\n\r\n        const eventQueryVariables = {\r\n            event\r\n        }\r\n        try {\r\n\r\n            const response = await Axios.post('/api/dialogflow/eventQuery', eventQueryVariables)\r\n            \r\n            for (let content of response.data.fulfillmentMessages) {\r\n                let content1 = {\r\n                    text : {\r\n                        text : content.payload.fields.conv1.stringValue\r\n                    }\r\n                } \r\n                \r\n                let content2 = {\r\n                    text : {\r\n                        text : content.payload.fields.conv2.stringValue\r\n                    }\r\n                } \r\n\r\n                let content3 = {\r\n                    text : {\r\n                        text : content.payload.fields.conv3.stringValue\r\n                    }\r\n                }\r\n\r\n                let conversation = {\r\n                    who: 'AI 상담요원',\r\n                    content: content1\r\n                }\r\n\r\n                let conversation1 = {\r\n                    who: 'AI 상담요원',\r\n                    content: content2\r\n                }\r\n\r\n                let conversation2 = {\r\n                    who: 'AI 상담요원',\r\n                    content: content3\r\n                }\r\n              \r\n            \r\n                setallMessage([...allMessage,conversation,conversation1,conversation2])\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            let conversation = {\r\n                who: 'AI 상담요원',\r\n                content: {\r\n                    text: {\r\n                        text: \"에러가 발생하였습니다. 다시 시도해주세요.\"\r\n                    }\r\n                }\r\n            }\r\n            setallMessage([...allMessage,conversation])\r\n        }           \r\n\r\n    }\r\n\r\n\r\n    const keyPressHanlder = (e) => {\r\n        if (e.key === \"Enter\") {\r\n\r\n            if (!e.target.value) {\r\n                return alert('최소 1글자 이상 입력해주시기 바랍니다.')\r\n            }\r\n\r\n            textQuery(e.target.value)\r\n            e.target.value = \"\"\r\n        }\r\n    }\r\n\r\n\r\n    const renderOneMessage = (message, i) => {\r\n       \r\n        if (message.content && message.content.text && message.content.text.text) {\r\n            return <Message key={i} who={message.who} text={message.content.text.text} />\r\n        }\r\n    }\r\n\r\n    const renderMessage = (returnedMessages) => {\r\n\r\n        if (returnedMessages) {\r\n            return returnedMessages.map((message, i) => {\r\n                return renderOneMessage(message, i);\r\n            })\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='pageSize'>\r\n\r\n            <h2 className=\"pageStart\">\r\n                견적 및 상담 요청 - AI\r\n            </h2>\r\n            <div className='grayBorder'/>\r\n            <br/>\r\n            <div className=\"counsel__whole\">\r\n                <div className=\"counsel__wholechat\">\r\n                    <div className=\"counsel__chat\" ref={messagesEnd}>\r\n\r\n                        {renderMessage(allMessage)}\r\n\r\n                    </div>\r\n                    <input\r\n                        className=\"counsel__input\"\r\n                        placeholder=\"입력해주시기 바랍니다...\"\r\n                        onKeyPress={keyPressHanlder}\r\n                        type=\"text\"\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n            <br/>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Counsel;","C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\Counsel\\Message\\Message.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\utils\\ImageSlider.js",[],"C:\\Users\\문지호\\Desktop\\웹프로젝트\\ChatBot\\client\\src\\components\\views\\MobileNav\\MobileNav.js",["92","93","94","95"],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":19,"column":11,"nodeType":"102","endLine":19,"endColumn":39},{"ruleId":"100","severity":1,"message":"101","line":20,"column":11,"nodeType":"102","endLine":20,"endColumn":58},{"ruleId":"103","severity":1,"message":"104","line":5,"column":9,"nodeType":"105","messageId":"106","endLine":5,"endColumn":14},{"ruleId":"103","severity":1,"message":"107","line":5,"column":17,"nodeType":"105","messageId":"106","endLine":5,"endColumn":21},{"ruleId":"103","severity":1,"message":"104","line":5,"column":9,"nodeType":"105","messageId":"106","endLine":5,"endColumn":14},{"ruleId":"100","severity":1,"message":"101","line":26,"column":32,"nodeType":"102","endLine":26,"endColumn":49},{"ruleId":"100","severity":1,"message":"101","line":34,"column":32,"nodeType":"102","endLine":34,"endColumn":49},{"ruleId":"100","severity":1,"message":"101","line":42,"column":32,"nodeType":"102","endLine":42,"endColumn":49},{"ruleId":"100","severity":1,"message":"101","line":49,"column":32,"nodeType":"102","endLine":49,"endColumn":49},{"ruleId":"100","severity":1,"message":"101","line":56,"column":32,"nodeType":"102","endLine":56,"endColumn":48},{"ruleId":"100","severity":1,"message":"101","line":63,"column":32,"nodeType":"102","endLine":63,"endColumn":48},{"ruleId":"100","severity":1,"message":"101","line":70,"column":32,"nodeType":"102","endLine":70,"endColumn":48},{"ruleId":"100","severity":1,"message":"101","line":77,"column":32,"nodeType":"102","endLine":77,"endColumn":48},{"ruleId":"100","severity":1,"message":"101","line":84,"column":32,"nodeType":"102","endLine":84,"endColumn":48},{"ruleId":"100","severity":1,"message":"101","line":91,"column":32,"nodeType":"102","endLine":91,"endColumn":47},{"ruleId":"100","severity":1,"message":"101","line":98,"column":32,"nodeType":"102","endLine":98,"endColumn":48},{"ruleId":"100","severity":1,"message":"101","line":105,"column":32,"nodeType":"102","endLine":105,"endColumn":48},{"ruleId":"100","severity":1,"message":"101","line":112,"column":32,"nodeType":"102","endLine":112,"endColumn":48},{"ruleId":"108","severity":1,"message":"109","line":12,"column":8,"nodeType":"110","endLine":12,"endColumn":10,"suggestions":"111"},{"ruleId":"100","severity":1,"message":"101","line":17,"column":49,"nodeType":"102","endLine":17,"endColumn":90},{"ruleId":"100","severity":1,"message":"101","line":20,"column":53,"nodeType":"102","endLine":20,"endColumn":94},{"ruleId":"100","severity":1,"message":"101","line":23,"column":56,"nodeType":"102","endLine":23,"endColumn":97},{"ruleId":"100","severity":1,"message":"101","line":26,"column":56,"nodeType":"102","endLine":26,"endColumn":97},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Title' is assigned a value but never used.","Identifier","unusedVar","'Text' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'eventQuery'. Either include it or remove the dependency array.","ArrayExpression",["114"],"no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},"Update the dependencies array to be: [eventQuery]",{"range":"117","text":"118"},[327,329],"[eventQuery]"]